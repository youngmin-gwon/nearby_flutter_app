#!/usr/bin/env bash

printf "\e[33;1m%s\e[0m\n" 'Pre-Commit'

# Undo the stash of the files
pop_stash_files() {
	if [ -n "$hasChanges" ]; then
		printf "\e[33;1m%s\e[0m\n" '=== Applying git stash changes ==='
		git stash pop
	fi
}

# Stash unstaged files
hasChanges=$(git diff)
if [ -n "$hasChanges" ]; then
	printf "\e[33;1m%s\e[0m\n" 'Stashing unstaged changes'
	git stash push --keep-index
fi

# Flutter formatter
printf "\e[33;1m%s\e[0m\n" 'Dart 코드 포맷팅을 시작'
dart format --output=none --set-exit-if-changed .
printf "\e[33;1m%s\e[0m\n" 'Dart 코드 포맷팅 완료'
printf '%s\n' "${avar}"

hasNewFilesFormatted=$(git diff)
if [[ -n ${hasNewFilesFormatted} ]]; then
	git add .
	printf "\e[33;1m%s\e[0m\n" 'Formatting 된 파일이 stage로 이동 되었음'
fi

printf "\e[33;1m%s\e[0m\n" 'Dart 코드 분석 실행'
flutter analyze
if [[ $? -ne 0 ]]; then
	printf "\e[31;1m%s\e[0m\n" '=== Flutter analyzer error ==='
	pop_stash_files
	exit 1
fi
printf "\e[33;1m%s\e[0m\n" 'Dart 코드 분석 완료'
printf '%s\n' "${avar}"

pop_stash_files
