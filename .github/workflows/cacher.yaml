name: Flutter Dependency Cacher Workflow

permissions:
  actions: write

on: workflow_call

jobs:
  # cache-check:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest]
  #       version: [3.13.6]
  #       channel: [stable]
  #       include:
  #         - os: ubuntu-latest
  #           flutter_path: /opt/hostedtoolcache/flutter
  #         - os: macos-latest
  #           flutter_path: /Users/runner/hostedtoolcache/flutter
  #     fail-fast: false

  #   env:
  #     working-directory: ./
  #   steps:
  #     - name: üìö ÏΩîÎìú Checkout
  #       uses: actions/checkout@v4

  #     - name: ‚òëÔ∏è Ï∫êÏãú ÏûàÎäîÏßÄ ÌôïÏù∏ÌïòÍ∏∞
  #       uses: actions/cache/restore@v3
  #       id: cache-flutter
  #       with:
  #         path: ${{ matrix.flutter_path }}
  #         key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
  #         restore-keys: ${{ runner.os }}-flutter-

  #     - name: üòà Ï∫êÏãú ÏóÜÎäî Í≤ΩÏö∞ Ï∫êÏãú Ï†ÄÏû• ÏÑ§Ï†ï
  #       if: steps.cache-flutter.outputs.cache-hit != 'true'
  #       uses: actions/cache@v3
  #       with:
  #         path: ${{ matrix.flutter_path }}
  #         key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
  #         restore-keys: ${{ runner.os }}-flutter-

  #     - name: üê¶ Flutter ÌôòÍ≤ΩÏÑ§Ï†ï
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: ${{ matrix.version }}
  #         channel: ${{ matrix.channel }}

  #     - name: ‚ûï ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò
  #       run: flutter pub get
  #       working-directory: ${{ env.working-directory }}

  return-key-hash:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.return-hash.outputs.file-hash}}
    steps:
      - id: return-hash
        run: echo "file-hash=${{ hashFiles('**/pubspec.lock') }}" >> "$GITHUB_OUTPUT"

  clear-cache:
    runs-on: ${{ matrix.os }}
    needs: return-key-hash
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Ï∫êÏãú Ï†ïÎ¶¨
        env:
          hash: ${{ needs.return-key-hash.outputs.hash }}
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear");
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              console.log(${{ env.hash }});
              console.log('${{runner.os}}-flutter-${{ hashFiles('**/pubspec.lock')}}')
              if (cache.key != `${{runner.os}}-flutter-${{ hashFiles('**/pubspec.lock')}}`) {
                // github.rest.actions.deleteActionsCacheById({
                //   owner: context.repo.owner,
                //   repo: context.repo.repo,
                //   cache_id: cache.id,
                // })
              }
            }
            console.log("Clear completed")

#   # Analyze and test.
#   analyze-and-test:
#     runs-on: ${{ matrix.os }}
#     needs: setup

#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest]
#         include:
#           - os: ubuntu-latest
#             flutter_path: /opt/hostedtoolcache/flutter
#           - os: macos-latest
#             flutter_path: /Users/runner/hostedtoolcache/flutter
#       fail-fast: false

#     steps:
#       - uses: actions/checkout@v1
#       - name: Cache Flutter
#         id: cache-flutter
#         uses: actions/cache@v1
#         with:
#           path: ${{ matrix.flutter_path }}
#           key: ${{ runner.os }}-flutter
#       - uses: subosito/flutter-action@v1
#         with:
#           channel: stable
#       - name: Analyze and Test
#         run: |
#           ./tool/ci.sh
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v1
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           file: coverage/lcov.info
